version: '3.4'

services:
  api:
    container_name: electronic_board
    build:
      context: .
      dockerfile: src/Board/Host/Board.Host.Api/Dockerfile
    ports:
      - 5001:80
    environment:
      - ConnectionStrings__PostgresBoardDb=Server=postgres;Database=ElectronicBoard;Username=postgres;Password=postgres;Port=5432
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Local 
    networks:
      - electronic_board_network
    depends_on:
      - "migrator"

  migrator:
    container_name: electronic_board_migrator
    build:
      context: .
      dockerfile: src/Board/Host/Board.Host.Migrator/Dockerfile
    environment:
      - ConnectionStrings__PostgresBoardDb=Server=postgres;Database=ElectronicBoard;Username=postgres;Password=postgres;Port=5432
      - ASPNETCORE_ENVIRONMENT=Local 
    networks:
      - electronic_board_network
    depends_on:
      - "postgres"

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8090:8080
    depends_on:
      - "postgres"

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_DB: "ElectronicBoard"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - pg-data:/var/lib/postgresql/data
    restart: always
    ports:
      - 5433:5433
    networks:
      - electronic_board_network
  
volumes:
  pg-data:
  
networks:
  electronic_board_network: